import { CompletionList, Position } from 'vscode-languageserver';
import { TextDocument } from 'vscode-languageserver-textdocument';
import { Block } from '../util';
/***
 * @param symbols expects e.g. '()', '[]' or '""'
 */
export declare function isInsideAttribute(currentLineUntrimmed: string, position: Position, symbols: string): boolean;
/***
 * Checks if inside e.g. "here"
 * Does not check for escaped quotation marks.
 */
export declare function isInsideQuotationMark(currentLineUntrimmed: string, position: Position): boolean;
export declare function getSymbolBeforePosition(document: TextDocument, position: Position): string;
export declare function positionIsAfterFieldAndType(position: Position, document: TextDocument, wordsBeforePosition: string[]): boolean;
export declare function getSuggestionForNativeTypes(foundBlock: Block, wordsBeforePosition: string[], document: TextDocument, binPath: string, lines: string[]): CompletionList | undefined;
export declare function getSuggestionForFieldAttribute(block: Block, currentLine: string, lines: string[], wordsBeforePosition: string[], document: TextDocument, binPath: string): CompletionList | undefined;
export declare function getAllRelationNames(lines: Array<string>): Array<string>;
export declare function getSuggestionsForTypes(foundBlock: Block, lines: Array<string>, position: Position, currentLineUntrimmed: string): CompletionList;
/**
 * gets suggestions for block typ
 */
export declare function getSuggestionForFirstInsideBlock(blockType: string, lines: Array<string>, position: Position, block: Block): CompletionList;
export declare function getSuggestionForBlockTypes(lines: Array<string>): CompletionList;
export declare function suggestEqualSymbol(blockType: string): CompletionList | undefined;
export declare function getValuesInsideBrackets(line: string): string[];
export declare function getSuggestionForSupportedFields(blockType: string, currentLine: string, currentLineUntrimmed: string, position: Position, binPath: string): CompletionList | undefined;
export declare function getTypesFromCurrentBlock(lines: Array<string>, block: Block, position?: Position): Map<string, number[]>;
export declare function getSuggestionsForInsideAttributes(untrimmedCurrentLine: string, lines: Array<string>, position: Position, block: Block): CompletionList | undefined;
